name: Cloudflare Pages Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - prod

env:
  PYTHON_VERSION: "3.13"

jobs:
  build-and-deploy:
    name: Build and Deploy (Pages)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up UV
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: |
          uv python install ${{ env.PYTHON_VERSION }}
          uv python pin ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: uv sync

      - name: Determine environment
        id: envsel
        run: |
          # Handle manual workflow dispatch
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "env=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "env=preview" >> $GITHUB_OUTPUT
          fi

      - name: Validate JSON
        run: make validate

      - name: Build site
        env:
          ENV: ${{ steps.envsel.outputs.env }}
        run: |
          make build-site ENV=${ENV}

      - name: Validate manifest
        run: |
          python - << 'PY'
          import json, sys
          from pathlib import Path
          p = Path('site/manifest.json')
          if not p.exists():
              print('manifest.json missing', file=sys.stderr)
              sys.exit(1)
          data = json.loads(p.read_text())
          required = ['generated', 'term', 'courses']
          missing = [k for k in required if k not in data]
          if missing:
              print('Missing keys in manifest:', ', '.join(missing), file=sys.stderr)
              sys.exit(1)
          print('Manifest OK with keys:', ', '.join(required))
          PY

      - name: Install Wrangler
        run: npm i -g wrangler@^3.45.0

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CF_PROJECT: ${{ secrets.CF_PROJECT }}
          GITHUB_REF: ${{ github.ref }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            BRANCH="production"
          else
            # fall back to sha if PR number unavailable
            BRANCH="pr-${PR_NUMBER:-${GITHUB_SHA}}"
          fi
          wrangler pages deploy site --project-name "$CF_PROJECT" --branch "$BRANCH"
