[pytest]
# Pytest configuration for Fall 2025 Semester Project

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum Python version
minversion = 7.0

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may interact with filesystem)
    dashboard: Dashboard-specific tests
    slow: Slow running tests
    smoke: Quick smoke tests for CI

# Output options
addopts =
    -v
    --strict-markers
    --tb=short
    --color=yes
    --cov=scripts
    --cov=dashboard
    --cov-report=term-missing:skip-covered
    --cov-report=html:build/coverage
    --cov-report=xml:build/coverage.xml
    --cov-branch
    --cov-fail-under=30

# Ignore warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = scripts,dashboard
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
